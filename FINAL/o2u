void output2user(char** board, int x, int y) {
    //system("clear");
int i,j;
for (i=0; i<9; i++)
    for (j=0; j<9; j++)
        if (board[i][j]=='.')
            board[i][j]=' ';

printf("   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n___|___|___||___|___|___||___|___|___\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n___|___|___||___|___|___||___|___|___\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n   |   |   ||   |   |   ||   |   |   \n===#===#===##===#===#===##===#===#===\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n___|___|___||___|___|___||___|___|___\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n___|___|___||___|___|___||___|___|___\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n   |   |   ||   |   |   ||   |   |   \n===#===#===##===#===#===##===#===#===\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n___|___|___||___|___|___||___|___|___\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n___|___|___||___|___|___||___|___|___\n   |   |   ||   |   |   ||   |   |   \n %c | %c | %c || %c | %c | %c || %c | %c | %c \n   |   |   ||   |   |   ||   |   |   \n", board[0][0], board[0][1], board[0][2], board[0][3], board[0][4], board[0][5], board[0][6], board[0][7], board[0][8], board[1][0], board[1][1], board[1][2], board[1][3], board[1][4], board[1][5], board[1][6], board[1][7], board[1][8], board[2][0], board[2][1], board[2][2], board[2][3], board[2][4], board[2][5], board[2][6], board[2][7], board[2][8], board[3][0], board[3][1], board[3][2], board[3][3], board[3][4], board[3][5], board[3][6], board[3][7], board[3][8], board[4][0], board[4][1], board[4][2], board[4][3], board[4][4], board[4][5], board[4][6], board[4][7], board[4][8], board[5][0], board[5][1], board[5][2], board[5][3], board[5][4], board[5][5], board[5][6], board[5][7], board[5][8], board[6][0], board[6][1], board[6][2], board[6][3], board[6][4], board[6][5], board[6][6], board[6][7], board[6][8], board[7][0], board[7][1], board[7][2], board[7][3], board[7][4], board[7][5], board[7][6], board[7][7], board[7][8], board[8][0], board[8][1], board[8][2], board[8][3], board[8][4], board[8][5], board[8][6], board[8][7], board[8][8]);

printf("\n\n");

for (i=0; i<9; i++)
    for (j=0; j<9; j++)
        if (board[i][j]==' ')
            board[i][j]='.';

char**** mat4 = mat2Dto4D(board);
char bigBoard[3][3];
for (i=0; i<3; i++) {
    for (j=0; j<3; j++) {
        int k=check3x3(mat4[i][j]);
        if (k == 2)
            bigBoard[i][j] = 'O';
        else if (k == 1)
            bigBoard[i][j] = 'X';
        else if (k == 0) bigBoard[i][j] = 'D';
        else bigBoard[i][j] = '.';
    }
}

printf("%c|%c|%c\n-----\n%c|%c|%c\n-----\n%c|%c|%c\n", bigBoard[0][0], bigBoard[0][1], bigBoard[0][2], bigBoard[1][0], bigBoard[1][1], bigBoard[1][2], bigBoard[2][0], bigBoard[2][1], bigBoard[2][2]);

printf("\n\n");

if (x==-1)
    printf("You can play anywhere");
else printf("You have to play in row=%d, col=%d", x, y);

free(mat4);
}
